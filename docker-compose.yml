
services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    environment:
    # TODO: Use .env for sensitive data later
      POSTGRES_DB: authdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # .NET 8 Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      # TODO: Use .env for sensitive data later
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=authdb;Username=postgres;Password=postgres123
      - JWT__SecretKey=your-super-secret-jwt-key-that-should-be-at-least-32-characters-long
      - JWT__Issuer=AuthApp
      - JWT__Audience=AuthApp
      - CORS__AllowedOrigins=http://localhost:3000
    ports:
      - "5050:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - VITE_API_URL=http://localhost:5000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - app-network
    volumes:
      - ./frontend:/app
      - /app/node_modules

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: